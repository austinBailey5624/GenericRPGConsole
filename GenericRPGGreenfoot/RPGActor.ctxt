#BlueJ class context
comment0.target=RPGActor
comment0.text=\r\n\ Write\ a\ description\ of\ class\ RPGActor\ here.\r\n\r\n\ @author\ Austin\ Bailey\r\n\ @version\ 5/5/2016\r\n
comment1.params=
comment1.target=RPGActor()
comment10.params=curHp
comment10.target=void\ setCurHp(int)
comment10.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_CurHp\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_curHp\ to\ parameter\ int\ curHp\r\n\ @return\ void\r\n
comment11.params=
comment11.target=int\ getAtk()
comment11.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_atk\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_atk\r\n
comment12.params=Atk
comment12.target=void\ setAtk(int)
comment12.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_atk\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_atk\ to\ parameter\ int\ Atk\r\n\ @return\ void\r\n
comment13.params=
comment13.target=double\ getAtkModifier()
comment13.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_atkModifier\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_atkModifier\r\n
comment14.params=AttackModifier
comment14.target=void\ setAttackModifier(double)
comment14.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_atkModifier\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ the\ value\ of\ m_atkModifer\ and\ ensures\ it\ is\ within\ acceptable\ parameters\r\n\ @return\ void\r\n
comment15.params=
comment15.target=int\ getDef()
comment15.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_def\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_def\r\n
comment16.params=Def
comment16.target=void\ setDef(int)
comment16.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_def\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ the\ value\ of\ m_def\ to\ paramter\ int\ Def\r\n\ @return\ void\r\n
comment17.params=
comment17.target=double\ getDefModifier()
comment17.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_defModifier\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_defModifier\r\n
comment18.params=DefenseModifier
comment18.target=void\ setDefenseModifier(double)
comment18.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_defModifier\ and\ ensures\ it\ is\ within\ an\ acceptable\ range\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ m_defModifier\ is\ set\ to\ parameter\ double\ DefenseModifier\ unless\ unacceptable,\ then\ value\ approximated\r\n\ @return\ void\r\n
comment19.params=
comment19.target=Item\ getEquippedSword()
comment19.text=\r\n\ This\ function\ returns\ the\ Item\ m_equippedSword\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_equippedSword\r\n
comment2.params=
comment2.target=boolean[]\ getSkillset()
comment2.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_skillSet\r\n\ pre\ -\ RPGActor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_skillSet\r\n
comment20.params=sword
comment20.target=void\ equipSword(Item)
comment20.text=\r\n\ This\ function\ attempts\ to\ set\ the\ Item\ m_equippedSword\ to\ the\ parameter\ Item\ sword\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_equippedSword\ to\ parameter\ Item\ sword\ if\ the\ item\ is\ a\ sword,\ else\ prints\ message\ "Cannot\ equip\ that\ in\ the\ sword\ slot\!"\r\n\ @return\ void\r\n
comment21.params=
comment21.target=Item\ getEquippedShield()
comment21.text=\r\n\ This\ function\ returns\ the\ Item\ m_equippedShield\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_equippedShield\r\n
comment22.params=shield
comment22.target=void\ equipShield(Item)
comment22.text=\r\n\ This\ function\ attempts\ to\ set\ the\ Item\ m_equippedShield\ to\ the\ parameter\ Item\ shield\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_equippedShield\ to\ parameter\ Item\ shield\ if\ the\ item\ is\ a\ shield,\ else\ prints\ message\ "Cannot\ equip\ that\ in\ the\ shield\ slot\!"\r\n\ @return\ void\r\n
comment23.params=
comment23.target=Item\ getEquippedArmor()
comment23.text=\r\n\ This\ function\ returns\ the\ Item\ m_equippedArmor\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_equippedArmor\r\n
comment24.params=armor
comment24.target=void\ equipArmor(Item)
comment24.text=\r\n\ This\ function\ attempts\ to\ set\ the\ Item\ m_equippedArmor\ to\ the\ parameter\ Item\ armor\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_equippedArmor\ to\ parameter\ Item\ armor\ if\ the\ item\ is\ a\ armor,\ else\ prints\ message\ "Cannot\ equip\ that\ in\ the\ armor\ slot\!"\r\n\ @return\ void\r\n
comment25.params=
comment25.target=Item\ getEquippedHelmet()
comment25.text=\r\n\ This\ function\ returns\ the\ Item\ m_equippedArmor\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_equippedArmor\r\n
comment26.params=helmet
comment26.target=void\ equipHelmet(Item)
comment26.text=\r\n\ This\ function\ attempts\ to\ set\ the\ Item\ m_equippedHelmet\ to\ the\ parameter\ Item\ helmet\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_equippedHelmet\ to\ parameter\ Item\ helmet\ if\ the\ item\ is\ a\ helmet,\ else\ prints\ message\ "Cannot\ equip\ that\ in\ the\ Helmet\ slot\!"\r\n\ @return\ void\r\n
comment27.params=
comment27.target=Item\ getEquippedGauntlets()
comment27.text=\r\n\ This\ function\ returns\ the\ Item\ m_equippedGauntlets\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_equippedGauntlets\r\n
comment28.params=gauntlets
comment28.target=void\ equipGauntlets(Item)
comment28.text=\r\n\ This\ function\ attempts\ to\ set\ the\ Item\ m_equippedGauntlets\ to\ the\ parameter\ Item\ gauntlets\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_equippedGauntlets\ to\ parameter\ Item\ gauntlets\ if\ the\ item\ is\ a\ gauntlets,\ else\ prints\ message\ "Cannot\ equip\ that\ in\ the\ Gauntlet\ slot\!"\r\n\ @return\ void\r\n
comment29.params=
comment29.target=java.lang.String\ getDescription()
comment29.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_description\r\n\ pre\ -\tActor\ Object\ Exists\r\n\ post\ -\ \t\t\tdoes\ not\ change\ member\ variables\r\n\ @return-\t\t\treturns\ the\ value\ of\ m_description\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_name\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_name\r\n
comment30.params=given
comment30.target=void\ setDescription(java.lang.String)
comment30.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_description\ to\ String\ given\r\n\ pre\ -\ \tActor\ Object\ Exists\r\n\ post\ -\ \t\t\tchanges\ m_description\ to\ the\ string\ given\ in\ the\ parameter\r\n\ @return\ -\t\tvoid\r\n
comment31.params=
comment31.target=Item\ getEquippedBoots()
comment31.text=\r\n\ This\ function\ returns\ the\ Item\ m_equippedBoots\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_equippedBoots\r\n
comment32.params=boots
comment32.target=void\ equipBoots(Item)
comment32.text=\r\n\ This\ function\ attempts\ to\ set\ the\ Item\ m_equippedBoots\ to\ the\ parameter\ Item\ boots\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_equippedBoots\ to\ parameter\ Item\ Boots\ if\ the\ items\ are\ boots,\ else\ prints\ message\ "Cannot\ equip\ that\ in\ the\ Boots\ slot\!"\r\n\ @return\ void\r\n
comment33.params=damage
comment33.target=boolean\ reduceHp(int)
comment33.text=\r\n\ This\ function\ reduces\ the\ hp\ of\ the\ RPGActor\ by\ the\ parameter\ int\ damage\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ reduces\ m_curHp\ by\ damage,\ if\ after\ m_curHp\ is\ >0\ returns\ false,\ else\ true\r\n\ @return\ false\ if\ RPGActor\ is\ alive,\ true\ if\ dead\r\n
comment34.params=opponent
comment34.target=boolean\ basicAttack(RPGActor)
comment34.text=\r\n\ This\ is\ a\ container\ function\ utilizing\ the\ reduceHp\ function\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ reduces\ m_curHp\ by\ damage,\ if\ after\ m_curHp\ is\ >0\ returns\ false,\ else\ true\r\n\ @return\ false\ if\ RPGActor\ is\ alive,\ true\ if\ dead\r\n
comment35.params=
comment35.target=int\ getAttackFighter()
comment35.text=\r\n\ Returns\ the\ atk\ value\ to\ be\ used\ by\ battle\ methods\ that\ includes\ modifiers\ from\ all\ items\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_atk\ plus\ bonus\ attack\ from\ all\ equipped\ items\r\n
comment36.params=
comment36.target=int\ getDefenseFighter()
comment36.text=\r\n\ Returns\ the\ def\ value\ to\ be\ used\ by\ the\ battle\ methods\ that\ includes\ modifiers\ from\ all\ items\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_def\ plus\ bonus\ def\ from\ all\ equipped\ items\r\n
comment37.params=
comment37.target=boolean\ RPGActorTest1()
comment37.text=\r\n\ Tests\ Actor\ constructor\ base\ values\ for\ m_level,\ m_maxHp,\ m_curHp,\ m_atk,\ m_atkModifier,\ m-def,\ and\ m_defModifier\r\n\ pre\ -\ Actor\ constructor\ exists\r\n\ post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment38.params=
comment38.target=boolean\ RPGActorTest2()
comment38.text=\r\n\ Tests\ Actor\ constructor\ and\ equip\ Sword\r\n\ pre\ -\ Actor\ constructor\ and\ equipSword()\ works\r\n\ post\ -\ \t\tnone\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment39.params=
comment39.target=boolean\ RPGActorTest3()
comment39.text=\r\n\ Tests\ Actor\ constructor\ and\ equipShield()\r\n\ pre\ -\ Actor\ constructor\ and\ equipSword()\ works\r\n\ post\ -\ \ \ \ \ \ \ \ \ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment4.params=name
comment4.target=void\ setName(java.lang.String)
comment4.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_name\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ changes\ m_name\ to\ parameter\ String\ name\r\n\ @return\ void\r\n
comment40.params=
comment40.target=boolean\ RPGActorTest4()
comment40.text=\r\n\ Tests\ Actor\ constructor\ and\ equipArmor()\r\n\ pre\ -\ Actor\ object\ is\ functional\r\n\ post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment41.params=
comment41.target=boolean\ RPGActorTest5()
comment41.text=\r\n\ Tests\ Actor\ constructor\ and\ equipHelmet()\r\n\ pre\ -\ Actor\ constructor\ and\ equipHelmet()\ works\r\n\ post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment42.params=
comment42.target=boolean\ RPGActorTest6()
comment42.text=\r\n\ Tests\ Actor\ constructor\ and\ equipGauntlets()\r\n\ @precondition\ -\ Actor\ constructor\ and\ equipHelmet()\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment43.params=
comment43.target=boolean\ RPGActorTest7()
comment43.text=\r\n\ Tests\ that\ RPGActor\ member\ array\ m_skillset\ is\ of\ proper\ length\r\n\ @precondition\ -\ Actor\ constructor\ assigns\ value\ to\ m_skillset\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment44.params=
comment44.target=boolean\ RPGActorTest8()
comment44.text=\r\n\ Tests\ that\ RPGActor\ member\ array\ m_skillset\ has\ proper\ starting\ values\r\n\ @precondition\ -\ Actor\ consturctor\ assigns\ m_skillset\ of\ proper\ length\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment45.params=
comment45.target=boolean\ RPGActorTest9()
comment45.text=\r\n\ Tests\ that\ member\ method\ getSkillset()\ works\r\n\ @precondition\ -\ getSkillset()\ has\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment46.params=
comment46.target=boolean\ RPGActorTest10()
comment46.text=\r\n\ Tests\ that\ member\ method\ getName()\ works\r\n\ @precondition\ -\ getName()\ has\ method\ definition\ and\ RPGActor\ consturctor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment47.params=
comment47.target=boolean\ RPGActorTest11()
comment47.text=\r\n\ Tests\ that\ member\ method\ setName()\ works\r\n\ @precondition\ -\ setName()\ has\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ ture\ if\ passed\ false\ else\r\n
comment48.params=
comment48.target=boolean\ RPGActorTest12()
comment48.text=\r\n\ Tests\ that\ member\ method\ getLevel()\ works\r\n\ @precondition\ -\ getLevel()\ has\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment49.params=
comment49.target=boolean\ RPGActorTest13()
comment49.text=\r\n\ Tests\ that\ memeber\ method\ setLevel()\ works\r\n\ @precondition\ -\ setLevel()\ has\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment5.params=
comment5.target=int\ getLevel()
comment5.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_level\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_level\r\n
comment50.params=
comment50.target=boolean\ RPGActorTest14()
comment50.text=\r\n\ Tests\ that\ member\ method\ getMaxHp()\ works\r\n\ @precondition\ -\ getMaxHp()\ has\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment51.params=
comment51.target=boolean\ RPGActorTest15()
comment51.text=\r\n\ Tests\ that\ member\ method\ setMaxHp()\ works\r\n\ @precondition\ -\ setMaxHp()\ has\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment52.params=
comment52.target=boolean\ RPGActorTest16()
comment52.text=\r\n\ Tests\ that\ member\ method\ getCurHp()\ works\r\n\ @precondition\ -\ getCurHp()\ hsa\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment53.params=
comment53.target=boolean\ RPGActorTest17()
comment53.text=\r\n\ Tests\ that\ member\ method\ setCurHp()\ works\r\n\ @precondition\ -\ setCurHp()\ has\ a\ method\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment54.params=
comment54.target=boolean\ RPGActorTest18()
comment54.text=\r\n\ Test\ that\ the\ member\ method\ getAtk()\ returns\ m_atk\r\n\ @precondition\ -\ getAtk()\ has\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment55.params=
comment55.target=boolean\ RPGActorTest19()
comment55.text=\r\n\ Test\ that\ the\ member\ method\ setAtk()\ sets\ a\ value\ to\ member\ variable\ m_atk\r\n\ @precondition\ -\ setAtk()\ has\ definition\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment56.params=
comment56.target=boolean\ RPGActorTest20()
comment56.text=\r\n\ Test\ that\ the\ member\ method\ getAtkModifier()\ returns\ the\ value\ m_atkModifier\r\n\ @precondition\ -\ getAtkModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment57.params=
comment57.target=boolean\ RPGActorTest21()
comment57.text=\r\n\ Test\ that\ ensures\ if\ the\ value\ passed\ to\ setAttackModifier\ is\ >5\ m_attackModifier\ is\ set\ to\ 5\r\n\ @precondition\ -\ setAttackModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment58.params=
comment58.target=boolean\ RPGActorTest22()
comment58.text=\r\n\ Test\ that\ ensures\ if\ the\ value\ passed\ to\ setAttackModifier\ is\ in\ range\ it\ is\ set\r\n\ @precondition\ -\ setAttackModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment59.params=
comment59.target=boolean\ RPGActorTest23()
comment59.text=\r\n\ Test\ that\ ensures\ if\ the\ value\ passed\ to\ setAttackModifier\ is\ below\ range\ m_attackModifer\ is\ set\ to\ 0\r\n\ @precondition\ -\ setAttackModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment6.params=level
comment6.target=void\ setLevel(int)
comment6.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_level\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_level\ to\ parameter\ int\ level\r\n\ @return\ void\r\n
comment60.params=
comment60.target=boolean\ RPGActorTest24()
comment60.text=\r\n\ Test\ that\ ensures\ getDef()\ returns\ correct\ value\r\n\ @precondition\ -\ getDef()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment61.params=
comment61.target=boolean\ RPGActorTest25()
comment61.text=\r\n\ Test\ that\ ensures\ that\ setDef()\ correctly\ sets\ m_def\r\n\ @precondition\ -\ setDef()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment62.params=
comment62.target=boolean\ RPGActorTest26()
comment62.text=\r\n\ Test\ that\ ensures\ that\ getDefModifier()\ returns\ the\ correct\ value\r\n\ @precondition\ -\ getDefModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment63.params=
comment63.target=boolean\ RPGActorTest27()
comment63.text=\r\n\ Test\ that\ ensures\ setDefenseModifier()\ sets\ m_defModifier\ to\ 5\ if\ given\ a\ value\ above\ 5\r\n\ @precondition\ -\ setDefenseModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment64.params=
comment64.target=boolean\ RPGActorTest28()
comment64.text=\r\n\ Test\ ensures\ that\ setDefenseModifier\ sets\ m_defModifier\ appropriately\ if\ given\ a\ good\ value\r\n\ @precondition\ -\ setDefenseModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment65.params=
comment65.target=boolean\ RGPActorTest29()
comment65.text=\r\n\ Test\ ensures\ that\ setDefenseModifier\ sets\ m_defModifer\ to\ 0\ if\ given\ a\ bad\ value\ less\ than\ zero\r\n\ @precondition\ -\ setDefenseModifier()\ has\ definition\ and\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment66.params=
comment66.target=boolean\ RPGActorTest30()
comment66.text=\r\n\ Test\ ensures\ that\ getEquippedSword()\ function\ returns\ the\ correct\ Item\r\n\ @precondition\ -\ getEquippedSword()\ function\ has\ definition\ and\ can\ interface\ with\ item\ class\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment67.params=
comment67.target=boolean\ RPGActorTest31()
comment67.text=\r\n\ Test\ ensures\ that\ equipSword()\ function\ equips\ an\ item\ in\ the\ case\ that\ that\ item\ is\ of\ the\ correct\ type\r\n\ @precondition\ -\ equipSword\ has\ definition\ and\ is\ compatable\ with\ item\ class\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment68.params=
comment68.target=boolean\ RPGActorTest32()
comment68.text=\r\n\ Test\ ensures\ that\ equipSword()\ function\ does\ not\ equip\ an\ item\ that\ is\ not\ of\ the\ right\ type\r\n\ @precondition\ -\ equipSword()\ has\ definition\ and\ is\ compatable\ with\ item\ class\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment69.params=
comment69.target=boolean\ RPGActorTest33()
comment69.text=\r\n\ Test\ ensures\ that\ getEquippedShield()\ function\ returns\ correct\ value\r\n\ @precondition\ -\ getEquippedShield()\ has\ definition,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment7.params=
comment7.target=int\ getMaxHp()
comment7.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_maxHp\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_maxHp\r\n
comment70.params=
comment70.target=boolean\ RPGActorTest34()
comment70.text=\r\n\ test\ ensures\ taht\ equipShield()\ method\ equips\ an\ item\ if\ it\ is\ of\ the\ right\ type\r\n\ @precondition\ -\ equipShield()\ has\ definiton,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none;\r\n\ @\ return\ true\ if\ passed\ false\ else\r\n
comment71.params=
comment71.target=boolean\ RPGActorTest35()
comment71.text=\r\n\ test\ ensures\ that\ equipShield()\ method\ does\ not\ equip\ an\ item\ if\ it\ is\ of\ the\ wrong\ type\r\n\ @precondition\ -\ equipShield()\ has\ definition,\ is\ compatable\ with\ item\ calss\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment72.params=
comment72.target=boolean\ RPGActorTest36()
comment72.text=\r\n\ test\ ensures\ that\ getEquippedArmor\ returns\ the\ correct\ value\r\n\ @precondition\ -\ getEquippedArmor()\ has\ definiton,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment73.params=
comment73.target=boolean\ RPGActorTest37()
comment73.text=\r\n\ test\ ensures\ that\ equipArmor()\ equips\ an\ item\ if\ it\ is\ of\ the\ right\ type\r\n\ @precondition\ -\ equipArmor()\ has\ definition,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none;\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment74.params=
comment74.target=boolean\ RPGActorTest38()
comment74.text=\r\n\ test\ ensures\ that\ equipArmor()\ equips\ fails\ to\ equip\ an\ item\ if\ it\ is\ of\ the\ wrong\ type\r\n\ @precondition\ -\ equipArmor()\ has\ definition,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment75.params=
comment75.target=boolean\ RPGActorTest39()
comment75.text=\r\n\ test\ ensures\ that\ getEquippedHelmet\ returns\ the\ correct\ value\r\n\ @precondition\ -\ getEquippedHemlet()\ \ has\ definition,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment76.params=
comment76.target=boolean\ RPGActorTest40()
comment76.text=\r\n\ test\ ensures\ that\ equipHelmet()\ equips\ an\ item\ if\ it\ is\ of\ the\ right\ type\r\n\ @precondition\ -\ equipHelmet()\ has\ definition,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ contructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment77.params=
comment77.target=boolean\ RPGActorTest41()
comment77.text=\r\n\ test\ ensures\ that\ equipHelmet()\ rejects\ an\ item\ of\ the\ wrong\ type\r\n\ @precondition\ -\ equipHelmet()\ has\ definition,\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment78.params=
comment78.target=boolean\ RPGActorTest42()
comment78.text=\r\n\ test\ ensures\ that\ getDescription\ returns\ m_description\r\n\ @precondition\ -\ getDescritpion()\ has\ definition,\ RPGActor\ has\ working\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment79.params=
comment79.target=boolean\ RPGActorTest43()
comment79.text=\r\n\ test\ ensures\ that\ setDescription\ sets\ properly\r\n\ @precondition\ -\ setDescription()\ has\ definition,\ RPGActor\ has\ working\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment8.params=maxHP
comment8.target=void\ setMaxHp(int)
comment8.text=\r\n\ This\ function\ sets\ the\ value\ of\ m_maxHp\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ sets\ m_maxHp\ to\ parameter\ int\ maxHP\r\n\ @return\ void\r\n
comment80.params=
comment80.target=boolean\ RPGActorTest44()
comment80.text=\r\n\ test\ ensures\ that\ getEquippedGauntlets\ returns\ the\ correct\ value\r\n\ @precondition\ -\ getEquippedGauntlets\ has\ definition\ that\ is\ compatable\ with\ item\ class,\ and\ RPGActor\ constructor\ works\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment81.params=
comment81.target=boolean\ RPGActorTest45()
comment81.text=\r\n\ test\ ensures\ that\ equipGauntlets()\ equips\ items\ of\ the\ right\ type\r\n\ @precondition\ -\ equipGauntlets()\ has\ definition\ that\ works\ with\ item,\ RPGActor\ has\ working\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment82.params=
comment82.target=boolean\ RPGActorTest46()
comment82.text=\r\n\ test\ ensures\ that\ equipGauntlets()\ fails\ to\ equip\ items\ of\ the\ wrong\ type\r\n\ @precondition\ -\ equipGauntlets()\ has\ definition\ that\ works\ with\ item,\ RPGActor\ has\ working\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment83.params=
comment83.target=boolean\ RPGActorTest47()
comment83.text=\r\n\ test\ ensures\ that\ getBoots\ returns\ the\ correct\ value\r\n\ @precondition\ -\ getBoots()\ has\ working\ definition\ and\ RPGActor\ has\ working\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment84.params=
comment84.target=boolean\ RPGActorTest48()
comment84.text=\r\n\ test\ ensures\ that\ equipBoots()\ properly\ equipps\ an\ item\ of\ the\ right\ type\r\n\ @precondition\ -\ equipBoots()\ has\ working\ definition\ and\ RPGActor\ has\ woking\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment85.params=
comment85.target=boolean\ RPGActorTest49()
comment85.text=\r\n\ test\ ensures\ that\ equipBoots()\ rejects\ item\ of\ incorrect\ type\r\n\ @precondition\ -\ equipBoots()\ has\ working\ definition\ and\ RPGActor\ has\ working\ constructor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment86.params=
comment86.target=boolean\ RPGActorTest50()
comment86.text=\r\n\ test\ ensures\ that\ reduceHp\ works\ properly\ if\ the\ actor\ does\ not\ die\r\n\ @precondition\ -\ instance\ of\ RPGActor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment87.params=
comment87.target=boolean\ RPGActorTest51()
comment87.text=\r\n\ test\ ensures\ that\ reduceHp\ works\ properly\ if\ the\ actor\ dies\r\n\ @precondition\ -\ instance\ of\ RPGActor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment88.params=
comment88.target=boolean\ RPGActorTest52()
comment88.text=\r\n\ test\ ensures\ that\ basicAttack()\ returns\ false\ if\ opponent\ lives\r\n\ @precondition\ -\ two\ instances\ of\ RPGActor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment89.params=
comment89.target=boolean\ RPGActorTest53()
comment89.text=\r\n\ test\ ensures\ that\ basicAttack()\ returns\ true\ if\ opponent\ dies\r\n\ @precondition\ -\ two\ instances\ of\ RPGActor\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment9.params=
comment9.target=int\ getCurHp()
comment9.text=\r\n\ This\ function\ returns\ the\ value\ of\ m_CurHp\r\n\ pre\ -\ Actor\ Object\ exists\r\n\ post\ -\ none\r\n\ @return\ m_curHp\r\n
comment90.params=
comment90.target=boolean\ RPGActorTest54()
comment90.text=\r\n\ test\ ensures\ that\ getAttackFighter()\ returns\ appropriately\r\n\ @precondition\ -\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none\r\n\ @return\ true\ if\ passed\ false\ else\r\n
comment91.params=
comment91.target=boolean\ RPGActorTest55()
comment91.text=\r\n\ test\ ensures\ that\ getDefenseFighter()\ returns\ appropriately\r\n\ @precondition\ -\ RPGActor\ constructor\ is\ functional\r\n\ @post\ -\ none\r\n\ @return\ trueif\ passed\ false\ else\r\n
numComments=92
