#BlueJ class context
comment0.target=Dungeon
comment0.text=\n\ Write\ a\ description\ of\ class\ Dungeon\ here.\n\ \n\ @author\ (your\ name)\ \n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=x\ y\ dungeonBase\ party\ name
comment1.target=Dungeon(int,\ int,\ char[][],\ Party,\ java.lang.String)
comment1.text=\n\ @param\ \:\ (pre)\ None\n\ @param\ \:\ (post)\ Creates\ a\ new\ object\ of\ type\ Town\ with\ set\ parameters\n\ @return\ \:\ None\n
comment10.params=str\ min\ max\ moveFlag
comment10.target=boolean\ menuInputCheck(java.lang.String,\ int,\ int,\ boolean)
comment10.text=\n\ @param\ \:\ (pre)\ Move\ flag\ set\ for\ extra\ valid\ move\ check\n\ @param\ \:\ (post)\ Checks\ to\ see\ if\ the\ parameter\ str\ is\ valid\n\ @return\ \:\ Returns\ true\ if\ the\ input\ and\ move\ are\ valid,\ false\ otherwise\n
comment11.params=sel
comment11.target=boolean\ validMoveCheck(int)
comment11.text=\n\ @param\ \:\ (pre)\ Movement\ direction\ chosen\ (sel)\n\ @param\ \:\ (post)\ Checks\ to\ see\ if\ the\ spot\ moved\ to\ is\ valid\ spot\n\ @return\ \:\ Returns\ true\ if\ the\ move\ is\ valid,\ false\ otherwise\n
comment12.params=
comment12.target=void\ menuInteraction()
comment12.text=\n\ @param\ \:\ (pre)\ Existing\ Dungeon\ object\n\ @param\ \:\ (post)\ Handles\ all\ menu\ interaction\ and\ display\ for\ traversing\ through\ the\ town\n\ @return\ \:\ None\n
comment13.params=sel
comment13.target=boolean\ characterMove(int)
comment13.text=\n\ @param\ \:\ (pre)\ Movement\ selection\ has\ been\ made\n\ @param\ \:\ (post)\ Checks\ to\ see\ if\ player\ has\ reached\ a\ town\ border\n\ @return\ \:\ Returns\ true\ if\ player\ is\ still\ in\ the\ town,\ false\ otherwise\n
comment14.params=
comment14.target=void\ bossEncounter()
comment14.text=\n\ @param\ \:\ (pre)\ Known\ building\ at\ coordinate\n\ @param\ \:\ (post)\ Pulls\ up\ different\ building\ interaction\ menus\n\ @return\ \:\ Returns\ true\ of\ the\ player\ is\ still\ in\ a\ building,\ false\ otherwise\n
comment15.params=
comment15.target=void\ foundChest()
comment16.params=str
comment16.target=boolean\ isNumeric(java.lang.String)
comment16.text=\n\ @param\ \:\ (pre)\ None\n\ @param\ \:\ (post)\ Checks\ to\ see\ if\ the\ passed\ argument\ is\ numeric\n\ @return\ \:\ Returns\ true\ if\ the\ string\ argument\ is\ numeric,\ false\ otherwise\n
comment17.params=
comment17.target=void\ clearScreen()
comment17.text=\n\ @param\ \:\ (pre)\ None\n\ @param\ \:\ (post)\ Clears\ the\ screen\ and\ resets\ to\ top\ position\n\ @return\ \:\ None\n
comment18.params=area
comment18.target=void\ displayArea(char[][])
comment18.text=\n\ @param\ \:\ (pre)\ Existing\ class\ object\ that\ implements\ Place\n\ @param\ \:\ (post)\ Displays\ the\ current\ area\ map\ with\ player\ token\n\ @return\ \:\ None\n
comment19.params=area
comment19.target=char[][]\ setBaseArea(char[][])
comment19.text=\n\ @param\ \:\ (pre)\ Existing\ class\ object\ that\ implements\ Place\n\ @param\ \:\ (post)\ Sets\ the\ base\ area\ map\ for\ the\ object\n\ @return\ \:\ Returns\ the\ array\ containing\ the\ base\ area\n
comment2.params=
comment2.target=void\ act()
comment2.text=\n\ Act\ -\ do\ whatever\ the\ Dungeon\ wants\ to\ do.\ This\ method\ is\ called\ whenever\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\n
comment20.params=currentArea\ baseArea
comment20.target=char[][]\ resetArea(char[][],\ char[][])
comment20.text=\n\ @param\ \:\ (pre)\ Existing\ class\ object\ that\ implements\ Place\n\ @param\ \:\ (post)\ Duplicates\ the\ passed\ base\ area\ array,\ effective\ reset\ of\ the\ area\ with\ no\ player\ token\n\ @return\ \:\ Returns\ the\ duplicated\ array\n
comment3.params=
comment3.target=int[]\ getStartLoc()
comment4.params=
comment4.target=int[]\ getCurrentLoc()
comment5.params=
comment5.target=char[][]\ getArea()
comment5.text=\n\ @param\ \:\ (pre)\ curAreaArr\ is\ initialized\n\ @param\ \:\ (post)\ None\n\ @return\ \:\ Returns\ the\ 2d\ array\ containing\ the\ current\ area\n
comment6.params=
comment6.target=char[][]\ getBase()
comment7.params=
comment7.target=void\ setCurrentToPrevious()
comment7.text=\n\ @param\ \:\ (pre)\ curPosX\ and\ curPosY\ declared\n\ @param\ \:\ (post)\ Sets\ the\ previous\ coordinates\ to\ our\ current\ coordinates\n\ @return\ \:\ None\n
comment8.params=
comment8.target=boolean\ inArea()
comment8.text=\n\ @param\ \:\ (pre)\ None\n\ @param\ \:\ (post)\ None\n\ @return\ \:\ Returns\ true\ if\ player\ is\ still\ in\ the\ area,\ false\ otherwise\n
comment9.params=x\ y
comment9.target=boolean\ atExit(int,\ int)
comment9.text=\n\ @param\ \:\ (pre)\ Exit\ coordinates\ set\n\ @param\ \:\ (post)\ Checks\ to\ see\ if\ player\ is\ at\ the\ exit\ coordinates\n\ @return\ \:\ Returns\ if\ player\ is\ at\ the\ exit\ coordinates,\ false\ otherwise\n
numComments=21
